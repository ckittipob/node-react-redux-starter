[{"/app/src/index.tsx":"1","/app/src/reportWebVitals.ts":"2","/app/src/app/store.ts":"3","/app/src/components/layout/App.tsx":"4","/app/src/app/utils/isDev.ts":"5","/app/src/app/utils/setAuthToken.ts":"6","/app/src/app/actions/common.ts":"7","/app/src/app/actions/auth.ts":"8","/app/src/components/layout/Navbar.tsx":"9","/app/src/components/home/Home.tsx":"10","/app/src/components/routing/Routes.tsx":"11","/app/src/components/common/modals/ModalContainer.tsx":"12","/app/src/app/reducers/index.ts":"13","/app/src/app/actions/types.ts":"14","/app/src/app/api/agent.ts":"15","/app/src/app/actions/modal.ts":"16","/app/src/components/routing/PrivateRoute.tsx":"17","/app/src/components/layout/NotFound.tsx":"18","/app/src/components/example/examples/Examples.tsx":"19","/app/src/components/example/example/Example.tsx":"20","/app/src/components/example/auth/Protected.tsx":"21","/app/src/components/example/common/Modal.tsx":"22","/app/src/components/example/example-forms/ExampleForm.tsx":"23","/app/src/components/example/auth/LoginForm.tsx":"24","/app/src/app/reducers/auth.ts":"25","/app/src/app/reducers/modal.ts":"26","/app/src/app/reducers/example.ts":"27","/app/src/app/reducers/common.ts":"28","/app/src/app/actions/example.ts":"29","/app/src/app/models/example.ts":"30","/app/src/components/common/form/TextInput.tsx":"31","/app/src/components/common/form/NumberInput.tsx":"32","/app/src/components/common/form/ErrorMessage.tsx":"33","/app/src/components/common/link/LinkButton.tsx":"34","/app/src/components/layout/LoadingPage.tsx":"35","/app/src/components/common/modals/Confirmation.tsx":"36","/app/src/components/common/form/A.tsx":"37"},{"size":628,"mtime":1612172833000,"results":"38","hashOfConfig":"39"},{"size":425,"mtime":1612172833000,"results":"40","hashOfConfig":"39"},{"size":1107,"mtime":1612172833000,"results":"41","hashOfConfig":"39"},{"size":1464,"mtime":1632556801259,"results":"42","hashOfConfig":"39"},{"size":183,"mtime":1612172833000,"results":"43","hashOfConfig":"39"},{"size":197,"mtime":1612172833000,"results":"44","hashOfConfig":"39"},{"size":229,"mtime":1612172833000,"results":"45","hashOfConfig":"39"},{"size":1119,"mtime":1632548023157,"results":"46","hashOfConfig":"39"},{"size":2148,"mtime":1632548416228,"results":"47","hashOfConfig":"39"},{"size":481,"mtime":1632389234293,"results":"48","hashOfConfig":"39"},{"size":1065,"mtime":1632563458633,"results":"49","hashOfConfig":"39"},{"size":643,"mtime":1612172833000,"results":"50","hashOfConfig":"39"},{"size":240,"mtime":1612172833000,"results":"51","hashOfConfig":"39"},{"size":955,"mtime":1612172833000,"results":"52","hashOfConfig":"39"},{"size":2384,"mtime":1632564041808,"results":"53","hashOfConfig":"39"},{"size":457,"mtime":1612172833000,"results":"54","hashOfConfig":"39"},{"size":725,"mtime":1612172833000,"results":"55","hashOfConfig":"39"},{"size":469,"mtime":1632389230399,"results":"56","hashOfConfig":"39"},{"size":2840,"mtime":1632562354062,"results":"57","hashOfConfig":"39"},{"size":946,"mtime":1612172833000,"results":"58","hashOfConfig":"39"},{"size":2351,"mtime":1612172833000,"results":"59","hashOfConfig":"39"},{"size":604,"mtime":1612172833000,"results":"60","hashOfConfig":"39"},{"size":4018,"mtime":1632563319918,"results":"61","hashOfConfig":"39"},{"size":2967,"mtime":1632554706260,"results":"62","hashOfConfig":"39"},{"size":830,"mtime":1632548023157,"results":"63","hashOfConfig":"39"},{"size":610,"mtime":1612172833000,"results":"64","hashOfConfig":"39"},{"size":2043,"mtime":1612172833000,"results":"65","hashOfConfig":"39"},{"size":421,"mtime":1612172833000,"results":"66","hashOfConfig":"39"},{"size":2605,"mtime":1632556224098,"results":"67","hashOfConfig":"39"},{"size":490,"mtime":1612172833000,"results":"68","hashOfConfig":"39"},{"size":601,"mtime":1632545709914,"results":"69","hashOfConfig":"39"},{"size":643,"mtime":1632391030256,"results":"70","hashOfConfig":"39"},{"size":534,"mtime":1632391030256,"results":"71","hashOfConfig":"39"},{"size":654,"mtime":1612172833000,"results":"72","hashOfConfig":"39"},{"size":343,"mtime":1632555647944,"results":"73","hashOfConfig":"39"},{"size":1236,"mtime":1632562441982,"results":"74","hashOfConfig":"39"},{"size":669,"mtime":1632561670460,"results":"75","hashOfConfig":"39"},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},"15gqfgl",{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"78"},{"filePath":"96","messages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"98","messages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100"},{"filePath":"101","messages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"78"},{"filePath":"104","messages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"106","messages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"108","messages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110"},{"filePath":"111","messages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"113","messages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"78"},{"filePath":"116","messages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"118","messages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120"},{"filePath":"121","messages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"123","messages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"125","messages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"127","messages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"129","messages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"78"},{"filePath":"132","messages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"134","messages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"136","messages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"138","messages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"78"},{"filePath":"141","messages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"78"},{"filePath":"144","messages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"146","messages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"148","messages":"149","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"150","messages":"151","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"78"},{"filePath":"153","messages":"154","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"155","messages":"156","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"157","messages":"158","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"159","messages":"160","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161"},"/app/src/index.tsx",[],["162","163"],"/app/src/reportWebVitals.ts",[],"/app/src/app/store.ts",[],"/app/src/components/layout/App.tsx",[],"/app/src/app/utils/isDev.ts",[],"/app/src/app/utils/setAuthToken.ts",[],"/app/src/app/actions/common.ts",[],"/app/src/app/actions/auth.ts",[],"/app/src/components/layout/Navbar.tsx",["164","165","166","167"],"import { connect } from \"react-redux\";\nimport React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { logout } from \"../../app/actions/auth\";\nimport { history } from \"../layout/App\";\n\ninterface IProps {\n  logout(): any;\n  isAuthenticatedStore: boolean;\n}\n\nconst Navbar: React.FC<IProps> = ({ logout, isAuthenticatedStore }) => {\n  const logoutHandler = () => {\n    logout();\n  };\n\n  const [currentPage, setCurrentPage] = useState(window.location.pathname);\n  const [authState, setAuthState] = useState(\n    window.localStorage.getItem(\"token\")\n  );\n\n  history.listen((location) => {\n    setCurrentPage(location.pathname);\n  });\n\n  return (\n    <header id=\"header-home\">\n      <div className=\"nav-container\">\n        <nav id=\"main-nav\">\n          <img src=\"../asset/img/logo.png\" id=\"logo\" />\n          <input className=\"menu-btn\" type=\"checkbox\" id=\"menu-btn\" />\n          <label className=\"menu-icon\" htmlFor=\"menu-btn\">\n            <span className=\"nav-icon\"></span>\n          </label>\n          <ul className=\"menu menu-items\">\n            <li>\n              <Link to=\"/\" className={currentPage === \"/\" ? \"current\" : \"\"}>\n                HOME\n              </Link>\n            </li>\n            <li>\n              <Link\n                to=\"/examples\"\n                className={currentPage === \"/examples\" ? \"current\" : \"\"}\n              >\n                EXAMPLE\n              </Link>\n            </li>\n          </ul>\n          <ul className=\"menu user\">\n            <li>\n              {!isAuthenticatedStore  ? (\n                <Link to=\"/login\" className=\"user-icon\">\n                  <i className=\"fas fa-user\"></i>&nbsp;&nbsp; Login\n                </Link>\n              ) : (\n                <a className=\"user-icon\" onClick={() => logoutHandler()}>\n                  <i className=\"fas fa-power-off\"></i>&nbsp;&nbsp; Logout\n                </a>\n              )}\n            </li>\n          </ul>\n        </nav>\n      </div>\n    </header>\n  );\n};\n\nconst mapStateToProps = (state: any) => ({\n  isAuthenticatedStore: state.auth.isAuthenticated,\n});\n\nexport default connect(mapStateToProps, { logout })(Navbar);\n","/app/src/components/home/Home.tsx",[],"/app/src/components/routing/Routes.tsx",["168","169"],"import React, { useContext } from \"react\";\nimport { Route, Switch, RouteComponentProps, withRouter } from \"react-router-dom\";\nimport Examples from \"../example/examples/Examples\";\nimport Example from \"../example/example/Example\";\nimport ExampleForm from \"../example/example-forms/ExampleForm\";\nimport Login from \"../example/auth/LoginForm\";\nimport NotFound from \"../layout/NotFound\";\nimport PrivateRoute from \"./PrivateRoute\";\nimport Protected from \"../example/auth/Protected\";\nimport Modal from \"../example/common/Modal\";\n\n\nconst Routes: React.FC<RouteComponentProps> = (props: any, { location }) => {\n  return (\n    <Switch>\n      <Route exact path=\"/login\" component={Login} />\n      <Route exact path=\"/examples\" component={Examples} />\n      <Route exact path=\"/example/:id\" component={Example} />\n      <PrivateRoute\n        path={[\"/new-example\", \"/edit-example/:id\"]}\n        component={ExampleForm}\n      />\n      <Route exact path=\"/modal\" component={Modal} />\n      <Route component={NotFound} />\n    </Switch>\n  );\n};\n\nexport default withRouter(Routes);\n","/app/src/components/common/modals/ModalContainer.tsx",["170","171"],"import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { openModal, closeModal } from \"../../../app/actions/modal\";\nimport  Modal  from \"react-modal\";\nimport Popup from \"reactjs-popup\";\n\ninterface IProps {\n  closeModal(): any;\n  modalStore: {\n    open: boolean;\n    body: any;\n  };\n}\n\nconst ModalContainer: React.FC<IProps> = ({\n  modalStore: { open, body },\n  closeModal,\n}) => {\n  return (\n    <Popup open={open} onClose={()=>closeModal()}>\n      {body}\n    </Popup>\n  );\n};\nconst mapStateToProps = (state: any) => ({\n  modalStore: state.modal,\n});\n\nexport default connect(mapStateToProps, { closeModal })(ModalContainer);\n","/app/src/app/reducers/index.ts",[],"/app/src/app/actions/types.ts",[],"/app/src/app/api/agent.ts",["172"],"import axios, { AxiosResponse } from 'axios';\nimport { toast } from 'react-toastify';\nimport { IExampleFormValues } from '../models/example';\nimport { IUser, IUserFormValues } from '../models/user';\nimport {history} from '../../components/layout/App';\n\naxios.defaults.baseURL = process.env.REACT_APP_API_URL;\n\n// Set Authentication Header\naxios.interceptors.request.use((config) => {\n    const token = window.localStorage.getItem('token');\n    if (token) config.headers.Authorization = `${token}`;\n    return config\n}, error => {\n    return Promise.reject(error);\n})\n\n//\naxios.interceptors.response.use(undefined, error => {\n    if(error.message === 'Network Error' && !error.response){\n        toast.error('Network Error');\n    }\n\n        const {status, data, config} = error.response;\n        if(status === 404){\n            history.push('/notfound');\n        }\n        if(status === 400 && config.method === 'get' && data.errors.hasOwnProperty('id')){\n            history.push('/notfound');\n        }\n        if(status === 401){\n            history.push('/login')\n        }\n        if(status === 500){\n            console.log('toast');\n            toast.error('Server error')\n        }\n        throw(error);\n\n})\n\nconst responseBody = (response: AxiosResponse) => response.data;\n\n//Loading Component Visual\nconst sleep = (ms: number) => (response: AxiosResponse) =>\n    new Promise<AxiosResponse>(resolve => setTimeout(() => resolve(response), ms));\n\nconst requests = {\n    get: (url: string) => axios.get(url).then(sleep(200)).then(responseBody),\n    post: (url: string, body: {}) => axios.post(url, body).then(sleep(200)).then(responseBody),\n    put: (url: string, body: {}) => axios.put(url, body).then(sleep(200)).then(responseBody),\n    del: (url: string) => axios.delete(url).then(sleep(200)).then(responseBody)\n}\n\nconst Examples = {\n    list: () => requests.get('/examples'),\n    detail: (id: string) => requests.get(`/examples/${id}`),\n    create: (example: IExampleFormValues) => requests.post('examples', example),\n    edit: (example: IExampleFormValues) => requests.put(`/examples/${example._id}`, example),\n    delete: (id: string) => requests.del(`/examples/${id}`),\n    protected: () => requests.get('/examples/protected')\n}\n\n\nconst User = {\n    login: (user: IUserFormValues): Promise<IUser> => requests.post(`/auth`, user)\n}\nexport default {\n    Examples,\n    User\n}","/app/src/app/actions/modal.ts",[],"/app/src/components/routing/PrivateRoute.tsx",["173"],"import React from \"react\";\nimport { RouteProps, Route, Redirect, RouteComponentProps } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\n\n\ninterface IProps extends RouteProps {\n  component: React.ComponentType<RouteComponentProps<any>>\n  auth: {\n    isAuthenticated: any;\n    loading: any;\n  };\n}\nconst PrivateRoute: React.FC<IProps> = ({\n  component: Component,\n  auth: { isAuthenticated },\n  ...rest\n}) => {\n  return (\n    <Route \n    {...rest}\n    render={(props) => isAuthenticated ? <Component {...props}/> : <Redirect to='/login' />}\n/>\n  );\n};\n\nconst mapStateToProps = (state: any) => ({\n  auth: state.auth,\n});\n\nexport default connect(mapStateToProps)(PrivateRoute);\n","/app/src/components/layout/NotFound.tsx",[],"/app/src/components/example/examples/Examples.tsx",["174"],"import React, { Fragment, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { getExamples, delExample } from \"../../../app/actions/example\";\nimport { openModal } from \"../../../app/actions/modal\";\nimport { IExample } from \"../../../app/models/example\";\n\nimport LoadingPage from \"../../layout/LoadingPage\";\nimport {history} from '../../layout/App';\nimport Confirmation from \"../../common/modals/Confirmation\";\n\ninterface IProps {\n  getExamples(): any;\n  delExample(id: string): any;\n  openModal(content: any): any;\n  example: {\n    examples: IExample[];\n    loadingExamples: boolean;\n  };\n}\n\n//Example\nconst Examples: React.FC<IProps> = ({\n  openModal,\n  getExamples,\n  delExample,\n  example: { examples, loadingExamples },\n}) => {\n  useEffect(() => {\n    getExamples();\n    console.log(\"yo\");\n  }, [getExamples]);\n\n  const delHandler = (e:any, id: string) => {\n    e.stopPropagation();\n    console.log(\"delete\");\n    openModal(      <Confirmation\n      header={`DELETE`}\n      content={<p>{`Do yo want to delete this item ?`}</p>}\n      action={() => delExample(id).then(() => getExamples())}\n      loading={loadingExamples}\n      disable={loadingExamples}\n    />);\n  };\n\n  if (loadingExamples) return <LoadingPage></LoadingPage>;\n\n  return (\n    <Fragment>\n      <div className=\"app-container\">\n        <div className=\"examples-container\">\n          <div className=\"examples-wrapper\">\n            <Link className=\"btn-main\" to=\"/new-example\">\n              Create\n            </Link>\n            {examples.length > 0 ? (\n              <table className=\"table\">\n                <thead>\n                  <tr>\n                    <th>name</th>\n                    <th>value</th>\n                    <th>delete</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {examples.map((example: IExample) => (\n                    <tr key={example._id}\n                    onClick={() => history.push(`/edit-example/${example._id}`)}\n                    >\n                      <td>\n                          {example.name}\n                      </td>\n                      <td>{example.integer}</td>\n                      <td>\n                        <a className=\"del-btn\" onClick={(e) => delHandler(e, example._id)}>\n                          <i className=\"fas fa-trash-alt\"></i>\n                        </a>\n                      </td>\n                    </tr>\n                  ))}\n                </tbody>\n              </table>\n            ) : (\n              <h1>No Example found</h1>\n            )}\n          </div>\n        </div>\n      </div>\n    </Fragment>\n  );\n};\n\nconst mapStateToProps = (state: any) => ({\n  example: state.example,\n});\n\nexport default connect(mapStateToProps, { getExamples, delExample, openModal })(Examples);\n","/app/src/components/example/example/Example.tsx",[],"/app/src/components/example/auth/Protected.tsx",[],"/app/src/components/example/common/Modal.tsx",[],"/app/src/components/example/example-forms/ExampleForm.tsx",[],"/app/src/components/example/auth/LoginForm.tsx",["175"],"import React, { useState } from \"react\";\nimport { Form as FinalForm, Field } from \"react-final-form\";\nimport { connect } from \"react-redux\";\nimport { login } from \"../../../app/actions/auth\";\nimport { isRequired, combineValidators } from \"revalidate\";\nimport { IUserFormValues } from \"../../../app/models/user\";\nimport TextInput from \"../../common/form/TextInput\";\nimport ErrorMessage from \"../../common/form/ErrorMessage\";\nimport { FORM_ERROR } from \"final-form\";\nimport { history } from '../../layout/App';\n\n// Validate Form Field\nconst validate = combineValidators({\n  email: isRequired({ message: \"The event title is required\" }),\n  password: isRequired({ message: \"The event title is required\" }),\n});\n\ninterface IProps {\n  login(user: IUserFormValues): any;\n  isAuthenticatedStore: any;\n}\n\nconst LoginForm: React.FC<IProps> = ({ login, isAuthenticatedStore }) => {\n  if (isAuthenticatedStore) {\n    history.push('/');\n  }\n\n    return (\n      <div className=\"login-container\">\n        <div className=\"login-content\">\n          <h2>LOGIN</h2>\n          <FinalForm\n            validate={validate}\n            onSubmit={(values: IUserFormValues) =>\n              login(values).catch((error: any) => ({\n                [FORM_ERROR]: error,\n              }))\n            }\n            render={({\n              handleSubmit,\n              submitting, // Loading Button (not implemented yet !!)\n              submitError, // Handle with ErrorMessage Component\n              invalid,\n              pristine,\n              dirtySinceLastSubmit,\n            }) => (\n              <form className=\"login-form\" onSubmit={handleSubmit}>\n                <Field name=\"email\">\n                  {({ input, meta }) => (\n                    <TextInput\n                    type=\"text\"\n                      label=\"Email\"\n                      input={input}\n                      meta={meta}\n                      placeholder=\"Email\"\n                    />\n                  )}\n                </Field>\n                <Field name=\"password\">\n                  {({ input, meta }) => (\n                    <TextInput\n                      type=\"password\"\n                      label=\"Password\"\n                      input={input}\n                      meta={meta}\n                      placeholder=\"Password\"\n                    />\n                  )}\n                </Field>\n                {submitError && (\n                  <ErrorMessage text=\"Login fail\" error={submitError} />\n                )}\n                <input\n                  disabled={(invalid && !dirtySinceLastSubmit) || pristine}\n                  type=\"submit\"\n                  value=\"login\"\n                  className=\"btn-main\"\n                />\n              </form>\n            )}\n          />\n        </div>\n      </div>\n    );\n  \n};\n\nconst mapStateToProps = (state: any) => ({\n  isAuthenticatedStore: state.auth.isAuthenticated,\n});\n\nexport default connect(mapStateToProps, {\n  login,\n})(LoginForm);\n","/app/src/app/reducers/auth.ts",[],"/app/src/app/reducers/modal.ts",[],"/app/src/app/reducers/example.ts",[],"/app/src/app/reducers/common.ts",["176"],"import {\n    SET_APPLOADED\n} from '../actions/types'\n\nconst initialState = {\n    appLoaded: false\n}\n\n\nconst commonReducer = (state = initialState, action:any) => {\n    const {type, payload} = action;\n    switch(type) {\n        case SET_APPLOADED:\n            return {\n                ...state,\n                appLoaded: true\n            }\n        default:\n            return state;\n    }\n}\n\nexport default commonReducer;","/app/src/app/actions/example.ts",["177"],"import { formatDiagnostic } from \"typescript\";\nimport agent from \"../api/agent\";\nimport { IExampleFormValues } from \"../models/example\";\nimport {\n  GET_EXAMPLES,\n  GET_EXAMPLE,\n  CREATE_EXAMPLE,\n  EDIT_EXAMPLE,\n  DEL_EXAMPLE,\n  EXAMPLE_ERROR,\n  EXAMPLES_LOADED,\n  EXAMPLE_LOADED,\n  EXAMPLE_SUBMITTED,\n  GET_EXAMPLES_PROTECTED\n} from \"./types\";\n\n// Get Examples\nexport const getExamples = () => async (dispatch: any) => {\n  dispatch({ type: EXAMPLES_LOADED });\n  try {\n    const res = await agent.Examples.list();\n    dispatch({\n      type: GET_EXAMPLES,\n      payload: res,\n    });\n  } catch (err) {\n    dispatch({\n      type: EXAMPLE_ERROR\n    });\n  }\n};\n\n// Get Examples\nexport const getProtected = () => async (dispatch: any) => {\n  dispatch({ type: EXAMPLES_LOADED });\n  try {\n    const res = await agent.Examples.protected();\n    dispatch({\n      type: GET_EXAMPLES_PROTECTED,\n      payload: res,\n    });\n  } catch (err) {\n    dispatch({\n      type: EXAMPLE_ERROR\n    });\n  }\n};\n\n//Get Example\nexport const getExample = (id: string) => async (dispatch: any) => {\n  let example;\n  dispatch({ type: EXAMPLE_LOADED });\n  try {\n    console.log('this');\n    const res = await agent.Examples.detail(id);\n    example = res;\n    dispatch({\n      type: GET_EXAMPLE,\n      payload: res,\n    });\n  } catch (err) {\n    console.log(err);\n    dispatch({\n      type: EXAMPLE_ERROR\n    });\n  }\n  return example\n};\n\n//Create Example\nexport const createExample = (example: IExampleFormValues) => async (dispatch: any) => {\n  dispatch({ type: EXAMPLE_SUBMITTED });\n  try {\n    await agent.Examples.create(example);\n    dispatch({\n      type: CREATE_EXAMPLE,\n    });\n  } catch (err: any) {\n    dispatch({\n      type: EXAMPLE_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n\n//Edit Example\nexport const editExample = (example: IExampleFormValues) => async (dispatch: any) => {\n  dispatch({ type: EXAMPLE_SUBMITTED });\n  try {\n    await agent.Examples.edit(example);\n    dispatch({\n      type: EDIT_EXAMPLE,\n    });\n  } catch (err: any) {\n    dispatch({\n      type: EXAMPLE_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n\n//Del Example\nexport const delExample = (id: string) => async (dispatch: any) => {\n  dispatch({ type: EXAMPLES_LOADED });\n  try {\n    await agent.Examples.delete(id);\n    dispatch({\n      type: DEL_EXAMPLE,\n    });\n  } catch (err: any) {\n    dispatch({\n      type: EXAMPLE_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n\n\n//Login - Set Token\n","/app/src/app/models/example.ts",[],"/app/src/components/common/form/TextInput.tsx",[],"/app/src/components/common/form/NumberInput.tsx",[],"/app/src/components/common/form/ErrorMessage.tsx",["178","179"],"import React from 'react';\nimport { AxiosResponse } from 'axios';\nimport { convertCompilerOptionsFromJson } from 'typescript';\n\n\ninterface IProps {\n  error: any;\n  text?: string;\n}\n\nconst ErrorMessage: React.FC<IProps> = ({ error, text }) => {\n\n  const errors = error.errors;\n  return (\n    <div className=\"form-error\">\n      <h3 className=\"form-error-topic\">{text}</h3>\n      {errors.map((e:any, i: number) => (\n        <p className=\"form-error-message\" key={i}>{e.msg}</p>\n      ))}\n    </div>\n  );\n};\n\nexport default ErrorMessage;\n","/app/src/components/common/link/LinkButton.tsx",[],"/app/src/components/layout/LoadingPage.tsx",[],"/app/src/components/common/modals/Confirmation.tsx",[],"/app/src/components/common/form/A.tsx",["180","181"],"import React from 'react'\r\n\r\ninterface IProps {\r\n    action: any;\r\n    loading: boolean;\r\n    disable: boolean;\r\n    css: string;\r\n    text: string;\r\n    i?: any;    \r\n}\r\nconst A:React.FC<IProps> = ({loading, disable, css, text, i, action}) => {\r\n    const spinner = <i className=\"fas fa-circle-notch fa-spin\"></i>;\r\n    const outputCss = (loading || disable) ? css + \" disabled\" : css;\r\n\r\n    if (loading)\r\n    return (\r\n      <a className={outputCss} onClick={action}>\r\n        {loading ? spinner : i}\r\n        {text}\r\n      </a>\r\n    );\r\n\r\n  return (\r\n    <a className={outputCss} onClick={action}>\r\n      {i}\r\n      {text}\r\n    </a>\r\n  );\r\n\r\n}\r\n\r\nexport default A\r\n",{"ruleId":"182","replacedBy":"183"},{"ruleId":"184","replacedBy":"185"},{"ruleId":"186","severity":1,"message":"187","line":18,"column":10,"nodeType":"188","messageId":"189","endLine":18,"endColumn":19},{"ruleId":"186","severity":1,"message":"190","line":18,"column":21,"nodeType":"188","messageId":"189","endLine":18,"endColumn":33},{"ruleId":"191","severity":1,"message":"192","line":30,"column":11,"nodeType":"193","endLine":30,"endColumn":56},{"ruleId":"194","severity":1,"message":"195","line":57,"column":17,"nodeType":"193","endLine":57,"endColumn":74},{"ruleId":"186","severity":1,"message":"196","line":1,"column":17,"nodeType":"188","messageId":"189","endLine":1,"endColumn":27},{"ruleId":"186","severity":1,"message":"197","line":9,"column":8,"nodeType":"188","messageId":"189","endLine":9,"endColumn":17},{"ruleId":"186","severity":1,"message":"198","line":3,"column":10,"nodeType":"188","messageId":"189","endLine":3,"endColumn":19},{"ruleId":"186","severity":1,"message":"199","line":4,"column":9,"nodeType":"188","messageId":"189","endLine":4,"endColumn":14},{"ruleId":"200","severity":1,"message":"201","line":68,"column":1,"nodeType":"202","endLine":71,"endColumn":2},{"ruleId":"186","severity":1,"message":"203","line":3,"column":8,"nodeType":"188","messageId":"189","endLine":3,"endColumn":17},{"ruleId":"194","severity":1,"message":"195","line":75,"column":25,"nodeType":"193","endLine":75,"endColumn":92},{"ruleId":"186","severity":1,"message":"204","line":1,"column":17,"nodeType":"188","messageId":"189","endLine":1,"endColumn":25},{"ruleId":"186","severity":1,"message":"205","line":11,"column":18,"nodeType":"188","messageId":"189","endLine":11,"endColumn":25},{"ruleId":"186","severity":1,"message":"206","line":1,"column":10,"nodeType":"188","messageId":"189","endLine":1,"endColumn":26},{"ruleId":"186","severity":1,"message":"207","line":2,"column":10,"nodeType":"188","messageId":"189","endLine":2,"endColumn":23},{"ruleId":"186","severity":1,"message":"208","line":3,"column":10,"nodeType":"188","messageId":"189","endLine":3,"endColumn":40},{"ruleId":"194","severity":1,"message":"195","line":17,"column":7,"nodeType":"193","endLine":17,"endColumn":49},{"ruleId":"194","severity":1,"message":"195","line":24,"column":5,"nodeType":"193","endLine":24,"endColumn":47},"no-native-reassign",["209"],"no-negated-in-lhs",["210"],"@typescript-eslint/no-unused-vars","'authState' is assigned a value but never used.","Identifier","unusedVar","'setAuthState' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'useContext' is defined but never used.","'Protected' is defined but never used.","'openModal' is defined but never used.","'Modal' is defined but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'PropTypes' is defined but never used.","'useState' is defined but never used.","'payload' is assigned a value but never used.","'formatDiagnostic' is defined but never used.","'AxiosResponse' is defined but never used.","'convertCompilerOptionsFromJson' is defined but never used.","no-global-assign","no-unsafe-negation"]